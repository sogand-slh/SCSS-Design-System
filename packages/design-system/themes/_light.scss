@use "../abstracts/functions/color-by-shade" as *;

$light: (
  //primary
  primary: colorByShade(primary, 40),
  on-primary: colorByShade(pure-white),
  primary-container: colorByShade(primary, 95),
  on-primary-container: colorByShade(primary, 30),
  primary-fixed: colorByShade(primary, 90),
  primary-fixed-dim: colorByShade(primary, 80),
  on-primary-fixed: colorByShade(primary, 10),
  on-primary-fixed-variant: colorByShade(primary, 30),
  inverse-primary: colorByShade(primary, 80),
  //secondary
  secondary: colorByShade(secondary, 40),
  on-secondary: colorByShade(pure-white),
  secondary-container: colorByShade(secondary, 90),
  on-secondary-container: colorByShade(secondary, 00),
  secondary-fixed: colorByShade(secondary, 90),
  secondary-fixed-dim: colorByShade(secondary, 80),
  on-secondary-fixed: colorByShade(secondary, 00),
  on-secondary-fixed-variant: colorByShade(secondary, 30),
  //tertiary
  tertiary: colorByShade(tertiary, 40),
  on-tertiary: colorByShade(pure-white),
  tertiary-container: colorByShade(tertiary, 90),
  on-tertiary-container: colorByShade(tertiary, 10),
  tertiary-fixed: colorByShade(tertiary, 90),
  tertiary-fixed-dim: colorByShade(tertiary, 80),
  on-tertiary-fixed: colorByShade(tertiary, 10),
  on-tertiary-fixed-variant: colorByShade(tertiary, 30),
  //neutral
  surface: colorByShade(neutral, 98),
  surface-tint: colorByShade(primary, 90),
  surface-dim: colorByShade(neutral, 87),
  surface-bright: colorByShade(neutral, 98),
  surface-container-lowest: colorByShade(pure-white),
  surface-container-low: colorByShade(neutral, 96),
  surface-container: colorByShade(neutral, 94),
  surface-container-high: colorByShade(neutral, 92),
  surface-container-highest: colorByShade(neutral, 90),
  on-surface: colorByShade(neutral, 10),
  on-surface-variant: colorByShade(neutral-variant, 30),
  on-surface-variant-low: colorByShade(neutral-variant, 50),
  outline: colorByShade(neutral-variant, 50),
  outline-variant: colorByShade(neutral-variant, 80),
  inverse-surface: colorByShade(neutral, 20),
  inverse-on-surface: colorByShade(neutral, 95),
  scrim: colorByShade(neutral, 00),
  //success
  success: colorByShade(success, 40),
  on-success: colorByShade(pure-white),
  success-container: colorByShade(success, 90),
  on-success-container: colorByShade(success, 10),
  //error
  error: colorByShade(error, 40),
  on-error: colorByShade(pure-white),
  error-container: colorByShade(error, 90),
  on-error-container: colorByShade(error, 10),
  //info
  info: colorByShade(info, 40),
  on-info: colorByShade(pure-white),
  info-container: colorByShade(info, 90),
  on-info-container: colorByShade(info, 10),
  //warning
  warning: colorByShade(warning, 40),
  on-warning: colorByShade(pure-white),
  warning-container: colorByShade(warning, 90),
  on-warning-container: colorByShade(warning, 10),
  //monochrome
  monochrome: colorByShade(neutral, 06),
  on-monochrome: colorByShade(pure-white),
  monochrome-container: colorByShade(neutral, 90),
  on-monochrome-container: colorByShade(neutral, 10),
  //state-layer
  hover-state-layer: colorByShade(state-layer, light-hover),
  focused-state-layer: colorByShade(state-layer, light-pressed-focused),
  custom-state-layer: colorByShade(state-layer, light-custom),
  //elevation
  elevation-shadow: colorByShade(elevation, light-shadow),
  elevation-glow: colorByShade(elevation, light-glow),
  //additional-colors
  additional-color1: colorByShade(additional-colors, light-color1),
  additional-color2: colorByShade(additional-colors, light-color2),
  additional-color3: colorByShade(additional-colors, light-color3),
  additional-color4: colorByShade(additional-colors, light-color4),
  additional-color5: colorByShade(additional-colors, light-color5),
  additional-color6: colorByShade(additional-colors, light-color6),
  additional-color7: colorByShade(additional-colors, light-color7),
  additional-color8: colorByShade(additional-colors, light-color8)
);
